---
title: "Exploring Labour data"
format: 
  html:
    toc: true
jupyter: python3
editor: 
  render-on-save: false
---

This script is just to explore data to decide how to:

1. process the data
2. analyze/visualize

# Setup

```{python}
import polars as pl
from pyprojroot import here
from great_tables import GT, md, html
```


```{python}
FILE = here() / "data" / "14100355.csv"
labour = pl.read_csv(FILE)
labour.glimpse()
```


```{python}
labour.group_by("REF_DATE").len().sort('REF_DATE')
```

# Data processing 

Create date columns: year, month, and date (ymd)

```{python}
labour = (
    labour.with_columns(
        pl.col('REF_DATE').str.extract(r'^(\d+)').cast(pl.Int32).alias('YEAR'),
        pl.col('REF_DATE').str.extract(r'(\d+)$').cast(pl.Int32).alias('MONTH')
    )
    .with_columns(
        pl.date(pl.col('YEAR'), pl.col('MONTH'), 1).alias('DATE_YMD')
    )
    .sort(['DATE_YMD'])
)
```


Filter to post 2005

```{python}
labour.group_by('YEAR').len().sort('YEAR')
```

```{python}
labour = labour.filter(pl.col('YEAR') >= 2005)
labour.group_by('YEAR').len().sort('YEAR')
```

## Explore columns

Look at unique values across each column

```{python}
labour.group_by('Labour force characteristics').len()
```


```{python}
def unique_values(col):
    GT(labour.select(col).unique()).show()


unique_values('Labour force characteristics')
```


```{python}
unique_values('North American Industry Classification System (NAICS)')
```

```{python}
unique_values('GEO')
```

```{python}
unique_values('Gender')
```

```{python}
unique_values('Age group')
```

```{python}
unique_values('UOM')
```

## Filter further

```{python}
labour_filtered = (
    labour
    .filter(
        pl.col('Labour force characteristics') == 'Employment',
        ~pl.col('North American Industry Classification System (NAICS)').is_in(
            ['Total, all industries', 'Unclassified industries']
        ),
        pl.col('GEO') == 'Canada',
        pl.col('Gender') == 'Total - Gender',
        pl.col('Age group') == '25 to 54 years',
        pl.col('UOM') == 'Persons in thousands'
    )
)
```
